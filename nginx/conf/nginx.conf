# 用户
user nginx;

# 线程数量(通常为CPU数量)
worker_processes 1;

# 错误日志
error_log /var/log/nginx/error.log error;

# 当前启动的线程ID
pid /var/run/nginx.pid;

# 工作模式以及连接数上限
events {
	# 单进程最大并发连接数
    worker_connections 1024;
}

# 设定HTTP服务器，利用它的反向代理功能提供负载均衡
http {
	# 邮件支持类型
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

	# 日志
    log_format main '[$time_iso8601] ==> $remote_addr[$remote_user] | [$request_method]$http_host$uri | $status[$request_time] | $http_referer';
    access_log /var/log/nginx/access.log main;
    rewrite_log on;

	# 指定ngnix是否调用sendfile函数输出文件。
	# 对用普通应用，必须设为on。
	# 如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile on;

	# 连接超时时间
    keepalive_timeout 60;

	# 页面静态资源压缩
    gzip on;
    # 资源压缩下限
	gzip_min_length 1k;
	# 压缩级别[1-9]，越大压缩率越高，同时消耗CPU医院也越多，建议设置为4左右
    gzip_comp_level 4;
    # 压缩资源的相应类型，多个以空格隔开，不建议压缩图片
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    # 配置警用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";
    # 是否添加"Vary: Accept-Encoding"相应头
    gzip_vary on;

    include /etc/nginx/conf.d/*.conf;
}
